{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regExp","NewMovie","state","isErrorImgUrl","isErrorimdbUrl","isDisabled","resetForms","setState","checkImgURl","test","checkImdbUrl","checkMovie","props","onAdd","method","name","onSubmit","event","preventDefault","placeholder","required","value","this","onChange","target","classNames","onBlur","type","disabled","Component","App","moviesFromServer","addMovie","newMovie","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a1c6ac.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isErrorImgUrl: boolean,\n  isErrorimdbUrl: boolean,\n  isDisabled: boolean,\n};\n\n// eslint-disable-next-line max-len\nconst regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorImgUrl: false,\n    isErrorimdbUrl: false,\n    isDisabled: false,\n  };\n\n  resetForms = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isErrorImgUrl: false,\n      isErrorimdbUrl: false,\n      isDisabled: false,\n    });\n  };\n\n  checkImgURl = () => {\n    if (!regExp.test(this.state.imgUrl)) {\n      this.setState({\n        isErrorImgUrl: true,\n        isDisabled: true,\n      });\n    } else {\n      this.setState({\n        isErrorImgUrl: false,\n        isDisabled: false,\n      });\n    }\n  };\n\n  checkImdbUrl = () => {\n    if (!regExp.test(this.state.imdbUrl)) {\n      this.setState({\n        isErrorimdbUrl: true,\n        isDisabled: true,\n      });\n    } else {\n      this.setState({\n        isErrorimdbUrl: false,\n        isDisabled: false,\n      });\n    }\n  };\n\n  checkMovie = () => {\n    if (!this.state.isErrorImgUrl && !this.state.isErrorimdbUrl) {\n      this.props.onAdd(this.state);\n      this.resetForms();\n    }\n  };\n\n  render() {\n    return (\n      <form\n        className=\"newMovie\"\n        method=\"post\"\n        name=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.checkMovie();\n        }}\n      >\n        <p className=\"newMovie__invitation\">\n          Put the form here\n        </p>\n        <p className=\"newMovie__name-form\">\n          Movie title:\n        </p>\n        <input\n          className=\"newMovie__title\n          input\"\n          name=\"title\"\n          placeholder=\"Title\"\n          required\n          value={this.state.title}\n          onChange={(event) => {\n            this.setState({ title: event.target.value });\n          }}\n        />\n        <label className=\"newMovie__description\">\n          <p className=\"newMovie__name-form\">\n            Description:\n          </p>\n          <textarea\n            className=\"newMovie__description--text\n            input\"\n            name=\"description\"\n            placeholder=\"...\"\n            value={this.state.description}\n            onChange={(event) => {\n              this.setState({ description: event.target.value });\n            }}\n          />\n        </label>\n        <p className=\"newMovie__name-form\">\n          Image Link:\n        </p>\n        <input\n          className={\n            classNames(\n              'newMovie__imgUrl',\n              'url',\n              {\n                'url--wrong': this.state.isErrorImgUrl === true,\n              },\n            )\n          }\n          name=\"imgUrl\"\n          placeholder=\"https://m.media-amazon.com\"\n          required\n          value={this.state.imgUrl}\n          onChange={(event) => {\n            this.setState({ imgUrl: event.target.value });\n          }}\n          onBlur={this.checkImgURl}\n        />\n        <div\n          className=\"newMovie__imgUrl\n          url--error\"\n        >\n          {this.state.isErrorImgUrl && (\n            <p className=\"newMovie__imgUrl--error-text\">\n              Incorrect URL\n            </p>\n          )}\n        </div>\n\n        <p className=\"newMovie__name-form\">\n          Film Link:\n        </p>\n        <input\n          className={\n            classNames(\n              'newMovie__imdbUrl',\n              'url',\n              {\n                'url--wrong': this.state.isErrorimdbUrl === true,\n              },\n            )\n          }\n          name=\"imdbUrl\"\n          placeholder=\"https://www.imdb.com\"\n          required\n          value={this.state.imdbUrl}\n          onChange={(event) => {\n            this.setState({ imdbUrl: event.target.value });\n          }}\n          onBlur={this.checkImdbUrl}\n        />\n        <div\n          className=\"newMovie__imdbUrl\n          url--error\"\n        >\n          {this.state.isErrorimdbUrl && (\n            <p\n              className=\"newMovie__imdbUrl--error-text\"\n            >\n              Incorrect URL\n            </p>\n          )}\n        </div>\n\n        <p className=\"newMovie__name-form\">\n          ID record:\n        </p>\n        <input\n          className=\"newMovie__imdbId\n          input\"\n          name=\"imdbId\"\n          placeholder=\"tt0319262\"\n          required\n          value={this.state.imdbId}\n          onChange={(event) => {\n            this.setState({ imdbId: event.target.value });\n          }}\n        />\n\n        <div className=\"newMovie__imdbUrl--error\">\n          {(this.state.isErrorimdbUrl\n            || this.state.isErrorImgUrl)\n            && (\n              <p className=\"newMovie__imdbUrl--error-text\">\n                Please, enter correct data\n              </p>\n            )}\n        </div>\n\n        <button\n          className=\"newMovie__button\"\n          type=\"submit\"\n          disabled={this.state.isDisabled}\n        >\n          ADD   MOVIE\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        newMovie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}